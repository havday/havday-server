plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

subprojects {
    compileJava {
        sourceCompatibility = '21'
        targetCompatibility = '21'
    }
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.jvm.convert'


    configurations {
//        asciidoctorExt
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }


    dependencies {
        //spring
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        //lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        //Spring-Rest-Docs
//        asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    }


//    ext {
//        snippetsDir = file('build/generated-snippets')
//    }
//
//    test {
//        outputs.dir snippetsDir
//        useJUnitPlatform()
//    }
//
//    asciidoctor {
//        inputs.dir snippetsDir
//        configurations 'asciidoctorExt'
//        dependsOn test
//    }
//
//    bootJar {
//        dependsOn asciidoctor
//        from ("${asciidoctor.outputDir}/html5") {
//            into 'static/docs'
//        }
//    }
}

bootRun {
    enabled = false
}

bootJar {
    enabled = false
//    archiveFileName = "${project.name}.jar"
}

bootBuildImage {
    enabled = false
}
